[{"/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/index.js":"1","/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/App.js":"2","/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/reportWebVitals.js":"3","/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/Proctor/Chat/Chat.js":"4","/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/SignIn.js":"5","/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/NotFound/NotFound.js":"6","/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/Proctor/Dashboard/Dashboard.js":"7","/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/Proctor/Student/Students.js":"8","/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/Students/Marks/Marks.js":"9","/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/Students/Chat/Chat.js":"10","/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/Students/Dashboard/Dashboard.js":"11","/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/Proctor/NavBar/NavBar.js":"12","/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/Students/NavBar/NavBar.js":"13","/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/Proctor/NavBar/MobileNav.js":"14","/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/Students/NavBar/MobileNav.js":"15","/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/Students/Chat/ChatComponent.js":"16"},{"size":500,"mtime":1651294576166,"results":"17","hashOfConfig":"18"},{"size":1445,"mtime":1651294576162,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1651294576167,"results":"20","hashOfConfig":"18"},{"size":379,"mtime":1651294576163,"results":"21","hashOfConfig":"18"},{"size":2906,"mtime":1651300185409,"results":"22","hashOfConfig":"18"},{"size":164,"mtime":1651294576163,"results":"23","hashOfConfig":"18"},{"size":2475,"mtime":1651299198622,"results":"24","hashOfConfig":"18"},{"size":9052,"mtime":1651299201836,"results":"25","hashOfConfig":"18"},{"size":8152,"mtime":1651294576165,"results":"26","hashOfConfig":"18"},{"size":202,"mtime":1651301443126,"results":"27","hashOfConfig":"18"},{"size":5827,"mtime":1651310149973,"results":"28","hashOfConfig":"18"},{"size":3986,"mtime":1651294576164,"results":"29","hashOfConfig":"18"},{"size":3982,"mtime":1651294576165,"results":"30","hashOfConfig":"18"},{"size":1984,"mtime":1651294576163,"results":"31","hashOfConfig":"18"},{"size":1979,"mtime":1651294576165,"results":"32","hashOfConfig":"18"},{"size":3671,"mtime":1651400832520,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"bbqhwr",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/index.js",[],["71","72"],"/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/App.js",[],"/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/reportWebVitals.js",[],"/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/Proctor/Chat/Chat.js",[],"/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/SignIn.js",[],"/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/NotFound/NotFound.js",[],"/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/Proctor/Dashboard/Dashboard.js",["73"],"import React, { useState, useEffect } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport NavBar from \"../NavBar/NavBar\";\n\nconst cookies = new Cookies();\n\nconst ProctorDashboard = () => {\n  const userInfo = cookies.get(\"userInfo\");\n  const googleProfile = cookies.get(\"googleProfile\");\n  const [proctorProfile, setproctorprofile] = useState(\"\");\n  useEffect(() => {\n    fetch(`http://192.168.0.106:4500/proctor?pid=${userInfo.googleId}`)\n      .then((response) => response.json())\n      .then((dat) => {\n        console.log(dat);\n        dat.img = googleProfile.imageUrl.substr(\n          0,\n          googleProfile.imageUrl.length - 6\n        );\n        setproctorprofile(dat);\n        if (dat)\n          fetch(`http://192.168.0.106:4500/proctor`, {\n            method: \"PUT\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(dat),\n          })\n            .then((response) => response.json())\n            .then((data) => {\n              console.log(\"Proctor Profile Updated\", data);\n            });\n      });\n  }, []);\n  return (\n    <>\n      <NavBar googleProfile={googleProfile} />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 first-div-home\">\n            <div class=\"card text-center\">\n              <div class=\"card-header\">\n                Dept. of {proctorProfile.department}\n              </div>\n              <div class=\"card-body\">\n                <img\n                  class=\"card-img-top profile-image\"\n                  src={googleProfile.imageUrl.substr(\n                    0,\n                    googleProfile.imageUrl.length - 6\n                  )}\n                  alt={proctorProfile.name}\n                />\n                <h3 class=\"card-title\">\n                  {proctorProfile.name} - {proctorProfile.initials}\n                </h3>\n                <p class=\"card-title\">{proctorProfile.qualifications}</p>\n                <h5 class=\"card-title\">{proctorProfile.designation}</h5>\n                <p class=\"card-text\">\n                  <a href={\"mailto:\" + proctorProfile.email}>\n                    {proctorProfile.email}\n                  </a>\n                </p>\n                <h6 class=\"card-text\">{proctorProfile.gender}</h6>\n                <h6 class=\"card-text\">{proctorProfile.phoneNumber}</h6>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default ProctorDashboard;\n","/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/Proctor/Student/Students.js",["74","75","76","77","78"],"import NavBar from \"../NavBar/NavBar\";\nimport React, { useState, useEffect } from \"react\";\nimport Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\n\nconst ProctorStudents = () => {\n  const get_gp = (grade) => {\n    // console.log(grade);\n    if (grade === \"S\") return 10;\n    else if (grade === \"A\") return 9;\n    else if (grade === \"B\") return 8;\n    else if (grade === \"C\") return 7;\n    else if (grade === \"D\") return 6;\n    else return 5;\n  };\n\n  const get_sgpas = (marks) => {\n    var keys = Object.keys(marks);\n    keys.forEach((sem) => {\n      let credits_total = 0;\n      let sgpa = 0;\n      marks[sem].forEach((mark) => {\n        var credits = parseInt(mark.credits);\n        credits_total += credits;\n        sgpa += credits * get_gp(mark.grade);\n        // console.log(sgpa);\n      });\n      marks[sem].push(credits_total);\n      marks[sem].push(sgpa / credits_total);\n    });\n  };\n\n  const process_marks = (allMarks) => {\n    var marks = {};\n    for (const mark of allMarks) {\n      if (marks[mark[\"semester\"]]) {\n        marks[mark[\"semester\"]].push(mark);\n      } else {\n        marks[mark[\"semester\"]] = [mark];\n      }\n    }\n    get_sgpas(marks);\n    return [marks, Object.keys(marks)];\n  };\n  const processStudents = (students) => {\n    var semesters = semester;\n    students.map((val) => {\n      if (!semesters.includes(val.semester)) semesters.push(val.semester);\n    });\n    setSemester(semester);\n    return;\n  };\n  const updateSelection = async (sid) => {\n    await fetch(`http://192.168.0.106:4500/student?sid=${sid}`)\n      .then((res) => res.json())\n      .then((data) => {\n        // console.log(data)\n        // processStudents(data)\n        var cs = selection[0];\n        cs.untouched = false;\n        cs[\"profile\"] = data;\n        setSelection([cs]);\n        console.log(selection);\n      });\n    if (selection[0] && selection[0][\"profile\"])\n      await fetch(\n        `http://192.168.0.106:4500/student/marks?usn=${selection[0].profile.usn}`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          // console.log(data)\n          // processStudents(data)\n          var cs = selection[0];\n          cs[\"marks\"] = process_marks(data);\n          setSelection([cs]);\n          console.log(selection);\n        });\n    if (selection[0] && selection[0][\"profile\"])\n      await fetch(\n        `http://192.168.0.106:4500/student/details?usn=${selection[0].profile.usn}`\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          // console.log(data)\n          // processStudents(data)\n          var cs = selection[0];\n          cs[\"details\"] = data;\n          setSelection([cs]);\n          console.log(selection);\n        });\n  };\n  const [semester, setSemester] = useState([]);\n  const userInfo = cookies.get(\"userInfo\");\n  const googleProfile = cookies.get(\"googleProfile\");\n  console.log(userInfo);\n  const [students, setStudents] = useState([]);\n  const [semSelection, setsemSelection] = useState(\"All\");\n  const [selection, setSelection] = useState([{ untouched: true }]);\n  useEffect(() => {\n    fetch(`http://192.168.0.106:4500/proctor/students?pid=${userInfo.googleId}`)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        processStudents(data);\n        setStudents(data);\n      });\n  }, []);\n\n  return (\n    <>\n      <NavBar googleProfile={googleProfile} />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 first-div-home\">\n            {window.innerHeight > window.innerWidth ? (\n              <div\n                class=\"alert alert-warning alert-dismissible fade show\"\n                role=\"alert\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"24\"\n                  height=\"24\"\n                  fill=\"currentColor\"\n                  class=\"bi bi-exclamation-triangle-fill flex-shrink-0 me-2\"\n                  viewBox=\"0 0 16 16\"\n                  role=\"img\"\n                  aria-label=\"Warning:\"\n                >\n                  <path d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\" />\n                </svg>\n                *For better viewing experience use Landscape Mode.\n                <button\n                  type=\"button\"\n                  class=\"btn-close\"\n                  data-bs-dismiss=\"alert\"\n                  aria-label=\"Close\"\n                ></button>\n              </div>\n            ) : (\n              <>{/*dca*/}</>\n            )}\n\n            {students.map((val, index) => {\n              return (\n                <div class=\"alert alert-light outer-box\" role=\"alert\">\n                  <div class=\"alert alert-danger\" role=\"alert\">\n                    <p>\n                      <strong>\n                        <span class=\"pull-left\">Semester : {val.semester}</span>\n                      </strong>\n                    </p>\n                  </div>\n                  <div>\n                    <table class=\"table table-primary table-hover table-striped table-corner\">\n                      <thead class=\"table-primary\">\n                        <tr class=\"table-primary\">\n                          <th class=\"table-primary\" scope=\"col\">\n                            USN\n                          </th>\n                          <th>Name</th>\n                          <th>Semester</th>\n                          <th>Details</th>\n                        </tr>\n                      </thead>\n                      <tbody class=\"table-primary table-corner\">\n                        <tr class=\"table-primary\">\n                          <td>{val.usn}</td>\n                          <td>{val.name}</td>\n                          <td>{val.semester}</td>\n                          <td>\n                            {\n                              <button\n                                className=\"btn btn-outline-dark mt-1 mb-1\"\n                                data-bs-toggle=\"modal\"\n                                data-bs-target={\"#exampleModal\" + val.sid}\n                              >\n                                View Details\n                              </button>\n                            }\n                            {\n                              <div\n                                class=\"modal fade\"\n                                id={\"exampleModal\" + val.sid}\n                                tabindex=\"-1\"\n                                aria-labelledby=\"exampleModalLabel\"\n                                aria-hidden=\"true\"\n                              >\n                                <div class=\"modal-dialog modal-dialog-centered\">\n                                  <div class=\"modal-content\">\n                                    <div class=\"modal-header\">\n                                      <h5\n                                        class=\"modal-title\"\n                                        id=\"exampleModalLabel\"\n                                      >\n                                        {val.usn}\n                                      </h5>\n                                      <button\n                                        type=\"button\"\n                                        class=\"btn-close\"\n                                        data-bs-dismiss=\"modal\"\n                                        aria-label=\"Close\"\n                                      ></button>\n                                    </div>\n                                    <div class=\"modal-body\">\n                                      <p>Name : {val.name}</p>\n                                      <p>Semester : {val.semester}</p>\n                                      <p>Email : {val.email}</p>\n                                      <p>Gender : {val.gender}</p>\n                                      <p>Phone Number : {val.phno}</p>\n                                      <p>CGPA : {val.cgpa}</p>\n                                    </div>\n                                    <div class=\"modal-footer\">\n                                      <button\n                                        type=\"button\"\n                                        class=\"btn btn-secondary\"\n                                        data-bs-dismiss=\"modal\"\n                                      >\n                                        Close\n                                      </button>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            }\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ProctorStudents;\n","/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/Students/Marks/Marks.js",["79","80"],"import React, { useState, useEffect } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport NavBar from \"../NavBar/NavBar\";\n\nconst cookies = new Cookies();\n\nconst get_gp = (grade) => {\n  console.log(grade);\n  if (grade === \"S\") return 10;\n  else if (grade === \"A\") return 9;\n  else if (grade === \"B\") return 8;\n  else if (grade === \"C\") return 7;\n  else if (grade === \"D\") return 6;\n  else return 5;\n};\n\nconst get_sgpas = (marks) => {\n  var keys = Object.keys(marks);\n  keys.forEach((sem) => {\n    let credits_total = 0;\n    let sgpa = 0;\n    marks[sem].forEach((mark) => {\n      var credits = parseInt(mark.credits);\n      credits_total += credits;\n      sgpa += credits * get_gp(mark.grade);\n      console.log(sgpa);\n    });\n    marks[sem].push(credits_total);\n    marks[sem].push(sgpa / credits_total);\n  });\n};\n\nconst process_marks = (allMarks) => {\n  var marks = {};\n  for (const mark of allMarks) {\n    if (marks[mark[\"semester\"]]) {\n      marks[mark[\"semester\"]].push(mark);\n    } else {\n      marks[mark[\"semester\"]] = [mark];\n    }\n  }\n  get_sgpas(marks);\n  return [marks, Object.keys(marks)];\n};\n\nconst StudentMarks = () => {\n  const userInfo = cookies.get(\"userInfo\");\n  const googleProfile = cookies.get(\"googleProfile\");\n  const [studentDetails, setstudDetail] = useState(\"abc\");\n  const [marks, setMarks] = useState(\"\");\n\n  useEffect(() => {\n    fetch(`http://localhost:4500/student?sid=${userInfo.googleId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.message === \"Student Profile Not Found\") {\n          setstudDetail(\"\");\n        } else {\n          fetch(`http://localhost:4500/student/marks?usn=${data.usn}`)\n            .then((response) => response.json())\n            .then((dat) => {\n              setMarks(dat);\n            });\n        }\n      });\n  }, []);\n  const [studentMarks, semesters] = process_marks(marks);\n  return (\n    <>\n      {studentDetails ? (\n        <>\n          <NavBar googleProfile={googleProfile} />\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-12 first-div-home\">\n                {window.innerHeight > window.innerWidth ? (\n                  <div\n                    class=\"alert alert-warning alert-dismissible fade show\"\n                    role=\"alert\"\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"24\"\n                      height=\"24\"\n                      fill=\"currentColor\"\n                      class=\"bi bi-exclamation-triangle-fill flex-shrink-0 me-2\"\n                      viewBox=\"0 0 16 16\"\n                      role=\"img\"\n                      aria-label=\"Warning:\"\n                    >\n                      <path d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\" />\n                    </svg>\n                    *For better viewing experience use Landscape Mode.\n                    <button\n                      type=\"button\"\n                      class=\"btn-close\"\n                      data-bs-dismiss=\"alert\"\n                      aria-label=\"Close\"\n                    ></button>\n                  </div>\n                ) : (\n                  <>{/*dca*/}</>\n                )}\n                {semesters.map((sem, val) => {\n                  return (\n                    <div class=\"alert alert-light outer-box\" role=\"alert\">\n                      <div class=\"alert alert-danger\" role=\"alert\">\n                        <p>\n                          <strong>\n                            <span class=\"pull-left\">Semester {sem}</span>\n\n                            <span class=\"pull-right\">\n                              SGPA :\n                              {\" \" +\n                                studentMarks[sem][\n                                  studentMarks[sem].length - 1\n                                ] +\n                                \" \"}\n                            </span>\n                            <span class=\"pull-right\">\n                              Total Credits :\n                              {\" \" +\n                                studentMarks[sem][\n                                  studentMarks[sem].length - 2\n                                ] +\n                                \" \"}\n                              &emsp;&emsp;&emsp;&emsp;\n                            </span>\n                          </strong>\n                        </p>\n                      </div>\n\n                      <table class=\"table table-danger table-hover table-striped table-corner\">\n                        <thead class=\"table-danger\">\n                          <tr class=\"table-danger\">\n                            <th class=\"table-danger\" scope=\"col\">\n                              #\n                            </th>\n                            <th class=\"table-danger\" scope=\"col\">\n                              Course Code\n                            </th>\n                            <th class=\"table-danger\" scope=\"col\">\n                              Course Title\n                            </th>\n                            <th class=\"table-danger\" scope=\"col\">\n                              Credits\n                            </th>\n                            <th class=\"table-danger\" scope=\"col\">\n                              Faculty\n                            </th>\n                            <th class=\"table-danger\" scope=\"col\">\n                              Attendance\n                            </th>\n                            <th class=\"table-danger\" scope=\"col\">\n                              Internal\n                            </th>\n                            <th class=\"table-danger\" scope=\"col\">\n                              SEE\n                            </th>\n                            <th class=\"table-danger\" scope=\"col\">\n                              Grade\n                            </th>\n                            <th class=\"table-danger\" scope=\"col\">\n                              Year\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {studentMarks[sem].map((value, index) => {\n                            if (value.cid)\n                              return (\n                                <tr class=\"table-danger\">\n                                  <th class=\"table-danger\" scope=\"row\">\n                                    {index + 1}\n                                  </th>\n                                  <td class=\"table-danger\">{value[\"cid\"]}</td>\n                                  <td class=\"table-danger\">{value[\"title\"]}</td>\n                                  <td class=\"table-danger\">\n                                    {value[\"credits\"]}\n                                  </td>\n                                  <td class=\"table-danger\">\n                                    {value[\"course_faculty\"]}\n                                  </td>\n                                  <td class=\"table-danger\">\n                                    {value[\"attendance\"]}\n                                  </td>\n                                  <td class=\"table-danger\">\n                                    {value[\"internal\"]}\n                                  </td>\n                                  <td class=\"table-danger\">{value[\"see\"]}</td>\n                                  <td class=\"table-danger\">{value[\"grade\"]}</td>\n                                  <td class=\"table-danger\">{value[\"year\"]}</td>\n                                </tr>\n                              );\n                          })}\n                        </tbody>\n                      </table>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </>\n      ) : (\n        <>{/*window.location.replace(\"/\")*/}</>\n      )}\n    </>\n  );\n};\nexport default StudentMarks;\n","/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/Students/Chat/Chat.js",[],"/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/Students/Dashboard/Dashboard.js",["81"],"import React, { useState, useEffect } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport NavBar from \"../NavBar/NavBar\";\n\nconst cookies = new Cookies();\n\nconst StudentDashboard = () => {\n  const userInfo = cookies.get(\"userInfo\");\n  const googleProfile = cookies.get(\"googleProfile\");\n  const [studentDetails, setstudDetail] = useState(\"abc\");\n  const [studentAdditionalDetails, setStudentAddDet] = useState({});\n  const [studentProctor, setStudentProctor] = useState(\"\");\n\n  useEffect(() => {\n    fetch(`http://192.168.0.106:4500/student?sid=${userInfo.googleId}`)\n      .then((response) => response.json())\n      .then((dat) => {\n        if (dat.message === \"Student Profile Not Found\") {\n          setstudDetail(\"\");\n        } else {\n          dat.img = googleProfile.imageUrl.substr(\n            0,\n            googleProfile.imageUrl.length - 6\n          );\n          setstudDetail(dat);\n          cookies.set(\"studentInfo\", dat, {\n            path: \"/\",\n          });\n\n          if (dat) {\n            fetch(`http://192.168.0.106:4500/student/details?usn=${dat[\"usn\"]}`)\n              .then((response) => response.json())\n              .then((data) => {\n                if (dat.message === \"Student Profile Not Found\") {\n                  setStudentAddDet(\"\");\n                } else {\n                  var value = JSON.parse(data[\"data\"]);\n                  setStudentAddDet(value);\n                }\n              });\n          }\n          if (dat) {\n            fetch(`http://192.168.0.106:4500/student/proctor?sid=${dat[\"sid\"]}`)\n              .then((response) => response.json())\n              .then((data) => {\n                console.log(data);\n                if (dat.message === \"Student Proctor Not Found\") {\n                  setStudentProctor(\"\");\n                } else {\n                  setStudentProctor(data);\n                }\n                if (dat) {\n                  fetch(`http://192.168.0.106:4500/student`, {\n                    method: \"PUT\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify(dat),\n                  })\n                    .then((response) => response.json())\n                    .then((data) => {\n                      console.log(\"Student Profile Updated\", data);\n                    });\n                }\n              });\n          }\n        }\n      });\n  }, []);\n\n  // console.log(studentDetails);\n  return (\n    <>\n      {studentDetails ? (\n        <>\n          <NavBar />\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-lg-6 mt-3 first-div-home\">\n                <div class=\"card text-center\">\n                  <div class=\"card-header\">\n                    Dept. of {studentDetails.department}\n                  </div>\n                  <div class=\"card-body\">\n                    <img\n                      class=\"card-img-top profile-image\"\n                      src={googleProfile.imageUrl.substr(\n                        0,\n                        googleProfile.imageUrl.length - 6\n                      )}\n                      alt={studentDetails.name}\n                    />\n                    <h3 class=\"card-title\">{studentDetails.name}</h3>\n                    <h5 class=\"card-title\">{studentDetails.usn}</h5>\n                    <p class=\"card-text\">\n                      <a href={\"mailto:\" + googleProfile.email}>\n                        {googleProfile.email}\n                      </a>\n                    </p>\n                    <h6 class=\"card-text\">{studentDetails.gender}</h6>\n                    <h6 class=\"card-text\">{studentDetails.phno}</h6>\n                    <h6 class=\"card-text\">\n                      Semester : {studentDetails.semester}\n                    </h6>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-lg-6 mt-3 first-div-home\">\n                <div class=\"card text-center\">\n                  <div class=\"card-header\">\n                    Dept. of {studentProctor.department}\n                  </div>\n                  <div class=\"card-body\">\n                    <img\n                      class=\"card-img-top profile-image\"\n                      src={studentProctor.image}\n                      alt={studentProctor.name}\n                    />\n                    <h3 class=\"card-title\">\n                      {studentProctor.name} - {studentProctor.initials}\n                    </h3>\n                    <p class=\"card-title\">{studentProctor.qualifications}</p>\n                    <h6 class=\"card-title\">{studentProctor.designation}</h6>\n                    <p class=\"card-text\">\n                      <a href={\"mailto:\" + studentProctor.email}>\n                        {studentProctor.email}\n                      </a>\n                    </p>\n                    <h6 class=\"card-text\">{studentProctor.phoneNumber}</h6>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-12 mt-3\">\n                <div class=\"card text-left\">\n                  <div class=\"card-header\">Additional Details of Student</div>\n                  <div class=\"card-body\">\n                    {Object.keys(studentAdditionalDetails).map((val) => {\n                      return (\n                        <p>\n                          {val} : {studentAdditionalDetails[val]}\n                        </p>\n                      );\n                    })}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <p></p>\n            </div>\n          </div>\n        </>\n      ) : (\n        <>{/*window.location.replace(\"/\")*/}</>\n      )}\n    </>\n  );\n};\nexport default StudentDashboard;\n","/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/Proctor/NavBar/NavBar.js",[],"/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/Students/NavBar/NavBar.js",[],"/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/Proctor/NavBar/MobileNav.js",[],"/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/Students/NavBar/MobileNav.js",[],"/Users/parjanyamodi/GitHub/proctor-portal-frontend/src/Components/Students/Chat/ChatComponent.js",["82","83","84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":32,"column":6,"nodeType":"91","endLine":32,"endColumn":8,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":48,"column":24,"nodeType":"95","messageId":"96","endLine":48,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":54,"column":9,"nodeType":"99","messageId":"100","endLine":54,"endColumn":24},{"ruleId":"97","severity":1,"message":"101","line":98,"column":10,"nodeType":"99","messageId":"100","endLine":98,"endColumn":22},{"ruleId":"97","severity":1,"message":"102","line":98,"column":24,"nodeType":"99","messageId":"100","endLine":98,"endColumn":39},{"ruleId":"89","severity":1,"message":"103","line":108,"column":6,"nodeType":"91","endLine":108,"endColumn":8,"suggestions":"104"},{"ruleId":"89","severity":1,"message":"105","line":66,"column":6,"nodeType":"91","endLine":66,"endColumn":8,"suggestions":"106"},{"ruleId":"93","severity":1,"message":"107","line":169,"column":65,"nodeType":"95","messageId":"108","endLine":169,"endColumn":67},{"ruleId":"89","severity":1,"message":"90","line":67,"column":6,"nodeType":"91","endLine":67,"endColumn":8,"suggestions":"109"},{"ruleId":"97","severity":1,"message":"110","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":16},{"ruleId":"97","severity":1,"message":"111","line":8,"column":9,"nodeType":"99","messageId":"100","endLine":8,"endColumn":17},{"ruleId":"89","severity":1,"message":"112","line":21,"column":6,"nodeType":"91","endLine":21,"endColumn":8,"suggestions":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'googleProfile.imageUrl' and 'userInfo.googleId'. Either include them or remove the dependency array.","ArrayExpression",["116"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'updateSelection' is assigned a value but never used.","Identifier","unusedVar","'semSelection' is assigned a value but never used.","'setsemSelection' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'processStudents' and 'userInfo.googleId'. Either include them or remove the dependency array.",["117"],"React Hook useEffect has a missing dependency: 'userInfo.googleId'. Either include it or remove the dependency array.",["118"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd",["119"],"'typeOf' is defined but never used.","'userInfo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'studentDetail.proctor'. Either include it or remove the dependency array.",["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"121","fix":"127"},{"desc":"128","fix":"129"},"Update the dependencies array to be: [googleProfile.imageUrl, userInfo.googleId]",{"range":"130","text":"131"},"Update the dependencies array to be: [processStudents, userInfo.googleId]",{"range":"132","text":"133"},"Update the dependencies array to be: [userInfo.googleId]",{"range":"134","text":"135"},{"range":"136","text":"131"},"Update the dependencies array to be: [studentDetail.proctor]",{"range":"137","text":"138"},[1070,1072],"[googleProfile.imageUrl, userInfo.googleId]",[3314,3316],"[processStudents, userInfo.googleId]",[1823,1825],"[userInfo.googleId]",[2384,2386],[680,682],"[studentDetail.proctor]"]