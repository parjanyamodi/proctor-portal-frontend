[{"/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/index.js":"1","/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/reportWebVitals.js":"2","/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/App.js":"3","/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/Proctor/Chat/Chat.js":"4","/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/NotFound/NotFound.js":"5","/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/SignIn.js":"6","/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/Students/Marks/Marks.js":"7","/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/Proctor/Dashboard/Dashboard.js":"8","/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/Proctor/Student/Students.js":"9","/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/Students/Chat/Chat.js":"10","/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/Students/Dashboard/Dashboard.js":"11","/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/Proctor/NavBar/NavBar.js":"12","/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/Students/NavBar/NavBar.js":"13","/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/Proctor/NavBar/MobileNav.js":"14","/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/Students/NavBar/MobileNav.js":"15"},{"size":500,"mtime":1641870032174,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1641870032174,"results":"18","hashOfConfig":"17"},{"size":1445,"mtime":1641964223102,"results":"19","hashOfConfig":"17"},{"size":379,"mtime":1641964223103,"results":"20","hashOfConfig":"17"},{"size":164,"mtime":1641870032170,"results":"21","hashOfConfig":"17"},{"size":1830,"mtime":1641878744051,"results":"22","hashOfConfig":"17"},{"size":8152,"mtime":1641870032173,"results":"23","hashOfConfig":"17"},{"size":2467,"mtime":1641969160543,"results":"24","hashOfConfig":"17"},{"size":7326,"mtime":1641964223105,"results":"25","hashOfConfig":"17"},{"size":337,"mtime":1641964223106,"results":"26","hashOfConfig":"17"},{"size":5223,"mtime":1641976266361,"results":"27","hashOfConfig":"17"},{"size":3986,"mtime":1641968431436,"results":"28","hashOfConfig":"17"},{"size":3982,"mtime":1641968435253,"results":"29","hashOfConfig":"17"},{"size":1984,"mtime":1641968091054,"results":"30","hashOfConfig":"17"},{"size":1979,"mtime":1641968386061,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"6kg9n4",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/index.js",[],["66","67"],"/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/reportWebVitals.js",[],"/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/App.js",[],"/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/Proctor/Chat/Chat.js",[],"/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/NotFound/NotFound.js",[],"/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/SignIn.js",[],"/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/Students/Marks/Marks.js",["68","69"],"import React, { useState, useEffect } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport NavBar from \"../NavBar/NavBar\";\n\nconst cookies = new Cookies();\n\nconst get_gp = (grade) => {\n  console.log(grade);\n  if (grade === \"S\") return 10;\n  else if (grade === \"A\") return 9;\n  else if (grade === \"B\") return 8;\n  else if (grade === \"C\") return 7;\n  else if (grade === \"D\") return 6;\n  else return 5;\n};\n\nconst get_sgpas = (marks) => {\n  var keys = Object.keys(marks);\n  keys.forEach((sem) => {\n    let credits_total = 0;\n    let sgpa = 0;\n    marks[sem].forEach((mark) => {\n      var credits = parseInt(mark.credits);\n      credits_total += credits;\n      sgpa += credits * get_gp(mark.grade);\n      console.log(sgpa);\n    });\n    marks[sem].push(credits_total);\n    marks[sem].push(sgpa / credits_total);\n  });\n};\n\nconst process_marks = (allMarks) => {\n  var marks = {};\n  for (const mark of allMarks) {\n    if (marks[mark[\"semester\"]]) {\n      marks[mark[\"semester\"]].push(mark);\n    } else {\n      marks[mark[\"semester\"]] = [mark];\n    }\n  }\n  get_sgpas(marks);\n  return [marks, Object.keys(marks)];\n};\n\nconst StudentMarks = () => {\n  const userInfo = cookies.get(\"userInfo\");\n  const googleProfile = cookies.get(\"googleProfile\");\n  const [studentDetails, setstudDetail] = useState(\"abc\");\n  const [marks, setMarks] = useState(\"\");\n\n  useEffect(() => {\n    fetch(`http://localhost:4500/student?sid=${userInfo.googleId}`)\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.message === \"Student Profile Not Found\") {\n          setstudDetail(\"\");\n        } else {\n          fetch(`http://localhost:4500/student/marks?usn=${data.usn}`)\n            .then((response) => response.json())\n            .then((dat) => {\n              setMarks(dat);\n            });\n        }\n      });\n  }, []);\n  const [studentMarks, semesters] = process_marks(marks);\n  return (\n    <>\n      {studentDetails ? (\n        <>\n          <NavBar googleProfile={googleProfile} />\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-12 first-div-home\">\n                {window.innerHeight > window.innerWidth ? (\n                  <div\n                    class=\"alert alert-warning alert-dismissible fade show\"\n                    role=\"alert\"\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"24\"\n                      height=\"24\"\n                      fill=\"currentColor\"\n                      class=\"bi bi-exclamation-triangle-fill flex-shrink-0 me-2\"\n                      viewBox=\"0 0 16 16\"\n                      role=\"img\"\n                      aria-label=\"Warning:\"\n                    >\n                      <path d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\" />\n                    </svg>\n                    *For better viewing experience use Landscape Mode.\n                    <button\n                      type=\"button\"\n                      class=\"btn-close\"\n                      data-bs-dismiss=\"alert\"\n                      aria-label=\"Close\"\n                    ></button>\n                  </div>\n                ) : (\n                  <>{/*dca*/}</>\n                )}\n                {semesters.map((sem, val) => {\n                  return (\n                    <div class=\"alert alert-light outer-box\" role=\"alert\">\n                      <div class=\"alert alert-danger\" role=\"alert\">\n                        <p>\n                          <strong>\n                            <span class=\"pull-left\">Semester {sem}</span>\n\n                            <span class=\"pull-right\">\n                              SGPA :\n                              {\" \" +\n                                studentMarks[sem][\n                                  studentMarks[sem].length - 1\n                                ] +\n                                \" \"}\n                            </span>\n                            <span class=\"pull-right\">\n                              Total Credits :\n                              {\" \" +\n                                studentMarks[sem][\n                                  studentMarks[sem].length - 2\n                                ] +\n                                \" \"}\n                              &emsp;&emsp;&emsp;&emsp;\n                            </span>\n                          </strong>\n                        </p>\n                      </div>\n\n                      <table class=\"table table-danger table-hover table-striped table-corner\">\n                        <thead class=\"table-danger\">\n                          <tr class=\"table-danger\">\n                            <th class=\"table-danger\" scope=\"col\">\n                              #\n                            </th>\n                            <th class=\"table-danger\" scope=\"col\">\n                              Course Code\n                            </th>\n                            <th class=\"table-danger\" scope=\"col\">\n                              Course Title\n                            </th>\n                            <th class=\"table-danger\" scope=\"col\">\n                              Credits\n                            </th>\n                            <th class=\"table-danger\" scope=\"col\">\n                              Faculty\n                            </th>\n                            <th class=\"table-danger\" scope=\"col\">\n                              Attendance\n                            </th>\n                            <th class=\"table-danger\" scope=\"col\">\n                              Internal\n                            </th>\n                            <th class=\"table-danger\" scope=\"col\">\n                              SEE\n                            </th>\n                            <th class=\"table-danger\" scope=\"col\">\n                              Grade\n                            </th>\n                            <th class=\"table-danger\" scope=\"col\">\n                              Year\n                            </th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {studentMarks[sem].map((value, index) => {\n                            if (value.cid)\n                              return (\n                                <tr class=\"table-danger\">\n                                  <th class=\"table-danger\" scope=\"row\">\n                                    {index + 1}\n                                  </th>\n                                  <td class=\"table-danger\">{value[\"cid\"]}</td>\n                                  <td class=\"table-danger\">{value[\"title\"]}</td>\n                                  <td class=\"table-danger\">\n                                    {value[\"credits\"]}\n                                  </td>\n                                  <td class=\"table-danger\">\n                                    {value[\"course_faculty\"]}\n                                  </td>\n                                  <td class=\"table-danger\">\n                                    {value[\"attendance\"]}\n                                  </td>\n                                  <td class=\"table-danger\">\n                                    {value[\"internal\"]}\n                                  </td>\n                                  <td class=\"table-danger\">{value[\"see\"]}</td>\n                                  <td class=\"table-danger\">{value[\"grade\"]}</td>\n                                  <td class=\"table-danger\">{value[\"year\"]}</td>\n                                </tr>\n                              );\n                          })}\n                        </tbody>\n                      </table>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </>\n      ) : (\n        <>{/*window.location.replace(\"/\")*/}</>\n      )}\n    </>\n  );\n};\nexport default StudentMarks;\n","/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/Proctor/Dashboard/Dashboard.js",["70"],"import React, { useState, useEffect } from \"react\";\nimport Cookies from \"universal-cookie\";\nimport NavBar from \"../NavBar/NavBar\";\n\nconst cookies = new Cookies();\n\nconst ProctorDashboard = () => {\n  const userInfo = cookies.get(\"userInfo\");\n  const googleProfile = cookies.get(\"googleProfile\");\n  const [proctorProfile, setproctorprofile] = useState(\"\");\n  useEffect(() => {\n    fetch(`http://localhost:4500/proctor?pid=${userInfo.googleId}`)\n      .then((response) => response.json())\n      .then((dat) => {\n        console.log(dat);\n        dat.img = googleProfile.imageUrl.substr(\n          0,\n          googleProfile.imageUrl.length - 6\n        );\n        setproctorprofile(dat);\n        if (dat)\n          fetch(`http://localhost:4500/proctor`, {\n            method: \"PUT\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(dat),\n          })\n            .then((response) => response.json())\n            .then((data) => {\n              console.log(\"Proctor Profile Updated\", data);\n            });\n      });\n  }, []);\n  return (\n    <>\n      <NavBar googleProfile={googleProfile} />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 first-div-home\">\n            <div class=\"card text-center\">\n              <div class=\"card-header\">\n                Dept. of {proctorProfile.department}\n              </div>\n              <div class=\"card-body\">\n                <img\n                  class=\"card-img-top profile-image\"\n                  src={googleProfile.imageUrl.substr(\n                    0,\n                    googleProfile.imageUrl.length - 6\n                  )}\n                  alt={proctorProfile.name}\n                />\n                <h3 class=\"card-title\">\n                  {proctorProfile.name} - {proctorProfile.initials}\n                </h3>\n                <p class=\"card-title\">{proctorProfile.qualifications}</p>\n                <h5 class=\"card-title\">{proctorProfile.designation}</h5>\n                <p class=\"card-text\">\n                  <a href={\"mailto:\" + proctorProfile.email}>\n                    {proctorProfile.email}\n                  </a>\n                </p>\n                <h6 class=\"card-text\">{proctorProfile.gender}</h6>\n                <h6 class=\"card-text\">{proctorProfile.phoneNumber}</h6>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default ProctorDashboard;\n","/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/Proctor/Student/Students.js",["71","72","73"],"import NavBar from \"../NavBar/NavBar\";\nimport React, { useState, useEffect } from \"react\";\nimport Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\n\nconst ProctorStudents = () => {\n  const get_gp = (grade) => {\n    // console.log(grade);\n    if (grade === \"S\") return 10;\n    else if (grade === \"A\") return 9;\n    else if (grade === \"B\") return 8;\n    else if (grade === \"C\") return 7;\n    else if (grade === \"D\") return 6;\n    else return 5;\n  };\n  \n  const get_sgpas = (marks) => {\n    var keys = Object.keys(marks);\n    keys.forEach((sem) => {\n      let credits_total = 0;\n      let sgpa = 0;\n      marks[sem].forEach((mark) => {\n        var credits = parseInt(mark.credits);\n        credits_total += credits;\n        sgpa += credits * get_gp(mark.grade);\n        // console.log(sgpa);\n      });\n      marks[sem].push(credits_total);\n      marks[sem].push(sgpa / credits_total);\n    });\n  };\n  \n  const process_marks = (allMarks) => {\n    var marks = {};\n    for (const mark of allMarks) {\n      if (marks[mark[\"semester\"]]) {\n        marks[mark[\"semester\"]].push(mark);\n      } else {\n        marks[mark[\"semester\"]] = [mark];\n      }\n    }\n    get_sgpas(marks);\n    return [marks, Object.keys(marks)];\n  };\n  const processStudents = (students)=> {\n    var semesters = semester\n    students.map((val)=>{\n      if(!semesters.includes(val.semester))\n        semesters.push(val.semester)\n    })\n    setSemester(semester)\n    return\n  }\n  const updateSelection =async (sid)=>{\n    await fetch(`http://localhost:4500/student?sid=${sid}`)\n    .then((res) => res.json())\n    .then((data)=> {\n      // console.log(data)\n      // processStudents(data)\n      var cs = selection[0]\n      cs.untouched=false\n      cs['profile'] = data\n      setSelection([cs])\n      console.log(selection)\n    })\n    if(selection[0] && selection[0]['profile'])\n    await fetch(`http://localhost:4500/student/marks?usn=${selection[0].profile.usn}`)\n    .then((res) => res.json())\n    .then((data)=> {\n      // console.log(data)\n      // processStudents(data)\n      var cs=selection[0]\n      cs['marks'] = process_marks(data)\n      setSelection([cs])\n      console.log(selection)\n    })\n    if(selection[0] && selection[0]['profile'])\n    await fetch(`http://localhost:4500/student/details?usn=${selection[0].profile.usn}`)\n    .then((res) => res.json())\n    .then((data)=> {\n      // console.log(data)\n      // processStudents(data)\n      var cs=selection[0]\n      cs['details'] = data\n      setSelection([cs])\n      console.log(selection)\n    })\n  }\n  const [semester, setSemester] = useState([])\n  const userInfo = cookies.get(\"userInfo\");\n  const googleProfile = cookies.get(\"googleProfile\");\n  console.log(userInfo)\n  const [students, setStudents] = useState([])\n  const [semSelection, setsemSelection] = useState(\"All\")\n  const [selection, setSelection] = useState([{untouched: true}])\n  useEffect(() => {\n    fetch(`http://localhost:4500/proctor/students?pid=${userInfo.googleId}`)\n    .then((res) => res.json())\n    .then((data)=> {\n      console.log(data)\n      processStudents(data)\n      setStudents(data)\n    })\n  }, [])\n\n  return (\n    <>\n      <NavBar googleProfile={googleProfile} />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12 first-div-home\">\n            {window.innerHeight > window.innerWidth ? (\n              <div\n                class=\"alert alert-warning alert-dismissible fade show\"\n                role=\"alert\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"24\"\n                  height=\"24\"\n                  fill=\"currentColor\"\n                  class=\"bi bi-exclamation-triangle-fill flex-shrink-0 me-2\"\n                  viewBox=\"0 0 16 16\"\n                  role=\"img\"\n                  aria-label=\"Warning:\"\n                >\n                  <path d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\" />\n                </svg>\n                *For better viewing experience use Landscape Mode.\n                <button\n                  type=\"button\"\n                  class=\"btn-close\"\n                  data-bs-dismiss=\"alert\"\n                  aria-label=\"Close\"\n                ></button>\n              </div>\n            ) : (\n              <>{/*dca*/}</>\n            )}\n            \n             <div class=\"alert alert-light outer-box\" role=\"alert\">\n                  <div class=\"alert alert-danger\" role=\"alert\">\n                    <p>\n                      <strong>\n                        <span class=\"pull-left\">Semester </span>\n\n                        <span class=\"pull-right\">\n                          SGPA :\n                          \n                        </span>\n                        <span class=\"pull-right\">\n                          Total Credits :\n                          \n                          &emsp;&emsp;&emsp;&emsp;\n                        </span>\n                      </strong>\n                    </p>\n                  </div>\n                  <div>\n                  {\n                    semester.map((val, index)=> {\n                      return (<button type=\"button\" onClick={()=>setsemSelection(val)}>Semester {val}</button>)\n                    })\n                  }\n                  <button type=\"button\" onClick={()=>setsemSelection(\"All\")}>All</button>\n                  </div>\n                  <table class=\"table table-danger table-hover table-striped table-corner\">\n                    <thead class=\"table-danger\">\n                      <tr class=\"table-danger\">\n                        <th class=\"table-danger\" scope=\"col\">\n                          #\n                        </th>\n                        <th>\n                          Name\n                        </th>\n                        <th>\n                          Semester\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {students.map((val, index)=> {\n                        if(val.semester === semSelection | semSelection === \"All\")\n                        return (\n                          <>\n                          <td>\n                            {index+1}\n                          </td>\n                          <td>\n                            {val.name}\n                          </td>\n                          <td>\n                            {val.semester}\n                          </td>\n                          <td>\n                            {<button type=\"button\" onClick={()=> {updateSelection(val.sid)}}>View Details {val.sid}</button>}\n                          </td>\n                          </>\n                        )\n                      })\n\n                      }\n                    </tbody>\n                  </table>\n                </div>\n                <div>\n                  {<p>{JSON.stringify(selection)}</p>}\n                   {/* (!selection.untouched) ? <>{JSON.stringify(selection)}</>: <><p>hi</p></>} */}\n                </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ProctorStudents;\n","/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/Students/Chat/Chat.js",[],"/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/Students/Dashboard/Dashboard.js",["74"],"/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/Proctor/NavBar/NavBar.js",[],"/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/Students/NavBar/NavBar.js",[],"/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/Proctor/NavBar/MobileNav.js",[],"/Volumes/Parjanya's SSD/GitHub/proctor-portal-frontend/src/Components/Students/NavBar/MobileNav.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":66,"column":6,"nodeType":"81","endLine":66,"endColumn":8,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":169,"column":65,"nodeType":"85","messageId":"86","endLine":169,"endColumn":67},{"ruleId":"79","severity":1,"message":"87","line":32,"column":6,"nodeType":"81","endLine":32,"endColumn":8,"suggestions":"88"},{"ruleId":"83","severity":1,"message":"89","line":48,"column":23,"nodeType":"85","messageId":"90","endLine":48,"endColumn":25},{"ruleId":"79","severity":1,"message":"91","line":105,"column":6,"nodeType":"81","endLine":105,"endColumn":8,"suggestions":"92"},{"ruleId":"83","severity":1,"message":"84","line":183,"column":49,"nodeType":"85","messageId":"86","endLine":183,"endColumn":51},{"ruleId":"79","severity":1,"message":"87","line":64,"column":6,"nodeType":"81","endLine":64,"endColumn":8,"suggestions":"93"},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userInfo.googleId'. Either include it or remove the dependency array.","ArrayExpression",["96"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'googleProfile.imageUrl' and 'userInfo.googleId'. Either include them or remove the dependency array.",["97"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has missing dependencies: 'processStudents' and 'userInfo.googleId'. Either include them or remove the dependency array.",["98"],["99"],"no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},{"desc":"102","fix":"106"},"Update the dependencies array to be: [userInfo.googleId]",{"range":"107","text":"108"},"Update the dependencies array to be: [googleProfile.imageUrl, userInfo.googleId]",{"range":"109","text":"110"},"Update the dependencies array to be: [processStudents, userInfo.googleId]",{"range":"111","text":"112"},{"range":"113","text":"110"},[1823,1825],"[userInfo.googleId]",[1062,1064],"[googleProfile.imageUrl, userInfo.googleId]",[3117,3119],"[processStudents, userInfo.googleId]",[2288,2290]]